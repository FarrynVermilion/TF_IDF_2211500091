/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.tf_idf;
import java.io.File;
import java.io.*;
import java.util.*;
import javax.swing.*;
import java.lang.Math; 
import javax.swing.table.*;
import com.opencsv.*;
import com.fasterxml.jackson.core.*;  
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.*; 
import java.sql.*;
        
/**
 *
 * @author Admin
 */
public class TF_IDF extends javax.swing.JFrame {

    /**
     * Creates new form MenuUploadFile
     */
    Database dbsetting;
    String driver,database,user,pass;
    DefaultTableModel statModel,kataModel,kalimatModel,urutanModel;
    String[] dummy= {"","","","",""};
    JFrame frame = new JFrame();
    String remove = "[.,;?/()-+~#<>]";
    public TF_IDF() {
        initComponents();
        this.setSize(1000,1000);
        this.setVisible(true);
        
        dbsetting=new Database();
        driver = dbsetting.SettingPanel("DBDriver");
        database = dbsetting.SettingPanel("DBDatabase");
        user = dbsetting.SettingPanel("DBUsername");
        pass = dbsetting.SettingPanel("DBPassword");
        
        statModel = (DefaultTableModel)Stat.getModel();
        kataModel = (DefaultTableModel)Kata.getModel();
        kalimatModel = (DefaultTableModel)Kalimat.getModel();
        urutanModel = (DefaultTableModel)Urutan.getModel();
        
        statModel.setRowCount(0);
        kataModel.setRowCount(0);
        kalimatModel.setRowCount(0);
        urutanModel.setRowCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        cmdbrowse = new javax.swing.JButton();
        cmdsimpan = new javax.swing.JButton();
        txtpath = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Kata = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        txttampilkalimat = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Kalimat = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        Stat = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        Urutan = new javax.swing.JTable();
        fileType = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        csvKolom1 = new javax.swing.JLabel();
        csvKolom2 = new javax.swing.JLabel();
        kolomCsvJson = new javax.swing.JTextField();
        tabelMysql = new javax.swing.JTextField();
        kolomMysql = new javax.swing.JTextField();
        btnBersih = new javax.swing.JButton();
        csvKolom3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1500, 1500));

        cmdbrowse.setText("Browse");
        cmdbrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdbrowseActionPerformed(evt);
            }
        });

        cmdsimpan.setText("Proses");
        cmdsimpan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdsimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdsimpanActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("NLP TF-IDF");
        jLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        Kata.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Kata", "Kemunculan", "Kalimat", "TF", "IDF", "TF_IDF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Kata);

        txttampilkalimat.setEditable(false);
        txttampilkalimat.setColumns(20);
        txttampilkalimat.setRows(5);
        jScrollPane3.setViewportView(txttampilkalimat);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Kalimat yang ditemukan");

        Kalimat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Kalimat", "Panjang", "Beban", "NFS", "W(s)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Kalimat);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Upload File");

        Stat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Min Threshold", "Jumlah Kata", "Jumlah Kalimat"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(Stat);

        Urutan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Urutan (B->K)", "Urutan kemunculan kalimat", "W(s)", "Kalimat"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(Urutan);

        fileType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "txt", "csv", "mysql", "json" }));
        fileType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileTypeActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CSV Setting");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("MySql Setting");
        jLabel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        csvKolom1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        csvKolom1.setText("Tabel");
        csvKolom1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        csvKolom2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        csvKolom2.setText("Kolom");
        csvKolom2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tabelMysql.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabelMysqlActionPerformed(evt);
            }
        });

        btnBersih.setText("Bersih");
        btnBersih.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBersih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBersihActionPerformed(evt);
            }
        });

        csvKolom3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        csvKolom3.setText("Kolom");
        csvKolom3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 878, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtpath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdbrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fileType, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnBersih, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(kolomCsvJson, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(csvKolom3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdsimpan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tabelMysql)
                                    .addComponent(csvKolom1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(csvKolom2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(kolomMysql))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtpath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdbrowse)
                    .addComponent(fileType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(csvKolom1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(csvKolom2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(csvKolom3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(kolomCsvJson, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tabelMysql, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kolomMysql, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBersih)
                    .addComponent(cmdsimpan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdbrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdbrowseActionPerformed
        // TODO add your handling code here:
        String filename=txtpath.getText();
        JFileChooser fc = new JFileChooser(new File(filename));
        //show open dialog
        fc.showOpenDialog(frame);
        File selectedFile = fc.getSelectedFile();
        //show save dialog
        int option = fc.showSaveDialog(frame);
            if(option == JFileChooser.APPROVE_OPTION){
               File file = fc.getSelectedFile();
               txtpath.setText("" + file.getPath());
            }else{
               txtpath.setText("Save command canceled");
            }   
    }//GEN-LAST:event_cmdbrowseActionPerformed

    private void cmdsimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdsimpanActionPerformed
        String option = String.valueOf(fileType.getSelectedItem());
        switch(option){
            case "txt":
                txt(txtpath.getText());
                proses();
                break;
            case "csv":
                if(kolomCsvJson.getText().trim().isEmpty()||kolomCsvJson.getText().trim().equals("")){
                    kolomCsvJson.setText("Masukan kolom");
                }
                else{
                    csv(txtpath.getText(),kolomCsvJson.getText());
                    proses();
                }
                break;
            case "json":
                json(txtpath.getText());
                proses();
                break;
            case "mysql":
                if(tabelMysql.getText().isBlank()){
                    tabelMysql.setText("Mohon diisi");
                }else if(kolomMysql.getText().isBlank()){
                    kolomMysql.setText("Mohon diisi");
                }else{
                    mysql(tabelMysql.getText(),kolomMysql.getText());
                    proses();
                }
                break;
            default:
                System.out.println("Option error");
                break;
        }
    }//GEN-LAST:event_cmdsimpanActionPerformed

    private void fileTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileTypeActionPerformed

    private void btnBersihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBersihActionPerformed
        // TODO add your handling code here:
        statModel.setRowCount(0);
        kataModel.setRowCount(0);
        kalimatModel.setRowCount(0);
        urutanModel.setRowCount(0);
        txttampilkalimat.setText(null);
        kolomCsvJson.setText(null);
        kolomMysql.setText(null);
        tabelMysql.setText(null);
        txtpath.setText(null);
    }//GEN-LAST:event_btnBersihActionPerformed

    private void tabelMysqlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabelMysqlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelMysqlActionPerformed
    public void txt(String Directory){
        try{
            txttampilkalimat.setText(null);
            Scanner reader = new Scanner(new  File (Directory));
            while(reader.hasNextLine()){
                String kalimat = reader.nextLine().toLowerCase().trim().replaceAll(remove,"");
                txttampilkalimat.append(kalimat+"\n");
            }
            reader.close();
        }catch(Exception e){
                System.out.println("txt error :" +e);
        }
    }   
    public void csv(String Directory, String Kolom){
        try {
            CSVReader csv = new CSVReader(new BufferedReader(new FileReader(Directory))); 
            String[] nextRecord; 
            String[] adaKolom = csv.readNext();
            int  urutanKolom=0;
            for(int a = 0; a<adaKolom.length;a++){
                if(adaKolom[a].equalsIgnoreCase(Kolom)){
                    urutanKolom=a;
                }
            }
            while ((nextRecord = csv.readNext()) != null) { 
                String kalimat = String.valueOf(nextRecord[urutanKolom]).trim().toLowerCase().replaceAll(remove, "");
                txttampilkalimat.append(kalimat+"\n");
            }
        } 
        catch (Exception e) { 
            System.out.println("csv error :" +e);
        }
    }
    public void json(String Directory){
        ObjectMapper objectMapper = new ObjectMapper();
        File file = new File(Directory);
        txttampilkalimat.setText(null);
        try{
            List<sentences> kalimat = objectMapper.readValue(file, new TypeReference<>(){});
            for (sentences x : kalimat) {
                txttampilkalimat.append(x.getIsi_tweet().trim().toLowerCase().replaceAll(remove, "")+"\n");
            }
        }catch(Exception e){
            System.out.println("json error "+e);
        }

    }
    public void mysql(String Tabel, String Kolom){
        try{
            txttampilkalimat.setText(null);
            Class.forName(driver);
            Statement stt = DriverManager.getConnection(database,user,pass).createStatement();
            String SQL = "SELECT "+Kolom+" FROM "+Tabel;
            ResultSet res = stt.executeQuery(SQL);
            while(res.next()){
                txttampilkalimat.append(res.getString(Kolom).trim().toLowerCase().replaceAll(remove, "")+"\n");
            }
            res.close();
            stt.close();
        }catch(Exception exc){
            System.err.println(exc.getMessage());
        }
    }
    public void proses(){
        statModel.setRowCount(0);
        kataModel.setRowCount(0);
        kalimatModel.setRowCount(0);
        urutanModel.setRowCount(0);
        String[] sentence=txttampilkalimat.getText().split("\\r?\\n");
//        Variabel kata
        int totalKata=0,totalKalimat=0;
//        contoh kalimat = "Kalimat kalimat apa"
//        Array List menyimpan kemunculan kata di setiap tweet maka kumpulanKalimat[0]={{"kalimat",2}.{"apa",1}}
        ArrayList<HashMap<String,Integer>> kumpulanKalimat=new ArrayList<>();
//        Hashmap digunakan untuk menyimpan kemunculan setiap kata di setiap tweet ("kalimat",2),{"apa",1}
        HashMap<String,Integer> kemunculanKataSeluruh=new HashMap<>();
//        Hashset menympan setiap kata {kalimat,apa}
        HashSet<String> kataUnik = new HashSet<>();
//        kemunculanKataPerTweet maka {kalimat,1}{apa,1} karena hanya muncul di 1 tweet saja
        HashMap<String,Integer> kemunculanKataPerTweet = new HashMap<>();
            
        for(int a=0;a<sentence.length;a++){
            HashMap<String,Integer> kemunculanKata =new HashMap<>();
            int jumlahKataKalimat = 0;
            String kalimat = sentence[a];
            String[] kata = kalimat.split(" ");
            for(int x =0;x<kata.length;x++ ){
                String word = kata[x].toLowerCase().trim();
                System.out.println("Cetak kata "+x+" "+word);
                kataUnik.add(word);
                if(kemunculanKata.containsKey(word)){
                    int nVal = kemunculanKata.get(word)+1;
                    kemunculanKata.replace(word, nVal);
                }else{
                    kemunculanKata.put(word, 1);
                }

                if(kemunculanKataSeluruh.containsKey(word)){
                    int nVal = kemunculanKataSeluruh.get(word)+1;
                    kemunculanKataSeluruh.replace(word, nVal);
                }else{
                    kemunculanKataSeluruh.put(word, 1);
                }
                jumlahKataKalimat++;
            }
            kalimatModel.addRow(dummy);
            kalimatModel.setValueAt(kalimat, totalKalimat, 0);
            kalimatModel.setValueAt(jumlahKataKalimat, totalKalimat, 1);
            kumpulanKalimat.add(kemunculanKata);
            totalKalimat++; 
            totalKata= totalKata+jumlahKataKalimat;
        }
        for(HashMap hash: kumpulanKalimat){
            for(Object key: hash.keySet()) {
                if(kemunculanKataPerTweet.containsKey(String.valueOf(key))){
                    int nVal = kemunculanKataPerTweet.get(String.valueOf(key));
                    kemunculanKataPerTweet.replace(String.valueOf(key), nVal+1);
                }else{
                    kemunculanKataPerTweet.put(String.valueOf(key), 1);
                }
            }
        }
//        minThreshold
        float minThreshold=(float) totalKata/totalKalimat;
        System.out.println("min threshold : "+minThreshold);
        String[] dummyStat= {String.valueOf(minThreshold),String.valueOf(totalKata),String.valueOf(totalKalimat),};
        statModel.addRow(dummyStat);

//        Variable kata
        HashMap<String,Double>tf =new HashMap<>();
        HashMap<String,Double>idf =new HashMap<>();
        HashMap<String,Double>beban = new HashMap<>();
//        Proses kata
        System.out.println("Kata\t\t|kemunculan Seluruh\t|Kemunculan per tweet\t|tf\t|idf\t|beban");
        for(String str: kataUnik){
            double TF = (double)kemunculanKataSeluruh.get(str)/totalKata;
            double IDF = (double)totalKalimat/kemunculanKataPerTweet.get(str);
            double BEBAN = TF*log2(IDF);
            tf.put(str,TF);
            idf.put(str,IDF);
            beban.put(str,BEBAN);
            System.out.println(str+"\t\t|" +kemunculanKataSeluruh.get(str)+"\t\t|"+kemunculanKataPerTweet.get(str)+" \t\t|"+TF+"\t|"+IDF+"\t| "+BEBAN);
            String[] arr = {
                str,
                kemunculanKataSeluruh.get(str).toString(),
                kemunculanKataPerTweet.get(str).toString(),
                String.valueOf(TF),
                String.valueOf(IDF),
                String.valueOf(BEBAN)
            };
            kataModel.addRow(arr);
        }

//        Variabel kalimat
        ArrayList<Double> bebanKalimat = new ArrayList<>();
        ArrayList<Integer>panjangKalimat=new ArrayList<>();
        ArrayList<Double>nfs=new ArrayList<>();
        HashMap<Integer,Double>bobotKalimat=new HashMap<>();
//        Proses kalimat
        System.out.println("Panjang Kalimat"+"\t|"+"beban kalimat"+"\t|"+"nfs"+"\t|"+"bobot kalimat");
        int x = 1;
        for(HashMap hash:kumpulanKalimat){
//            beban total kalimat
            double sum=0;
//            Panjang kalimat
            int length=0;
            for(Object str:hash.keySet()){
                length=length+Integer.parseInt(String.valueOf(hash.get(String.valueOf(str))));
                sum=sum+(beban.get(String.valueOf(str))*Integer.valueOf(String.valueOf(hash.get(String.valueOf(str)))));
            }
            double NFS = minThreshold;
            if(Double.parseDouble(String.valueOf(length))>minThreshold){
                NFS=Double.parseDouble(String.valueOf(length));
            }

            double bobot=sum/NFS;
            bobotKalimat.put(x,bobot);

            nfs.add(NFS);
            panjangKalimat.add(length);
            bebanKalimat.add(sum);
            System.out.println(length+"\t|"+sum+"\t|"+NFS+"\t|"+bobot);
            kalimatModel.setValueAt(sum,x-1,2);
            kalimatModel.setValueAt(NFS,x-1,3);
            kalimatModel.setValueAt(bobot,x-1,4);
            x++;
        }

//        Urutan kalimat
        bobotKalimat.entrySet().stream().sorted(
                Map.Entry.<Integer, Double>comparingByValue().reversed())
                .forEach(y -> {
                     System.out.println("Kalimat ke - "+y.getKey() + ", "+ y.getValue()+","+kalimatModel.getValueAt(y.getKey()-1, 0));
                     String[] arr={
                         "",
                         String.valueOf(y.getKey()),
                         String.valueOf(y.getValue()),
                         String.valueOf(kalimatModel.getValueAt(y.getKey()-1, 0))
                     };
                     urutanModel.addRow(arr);
        });
        for(int t = 0; t <bobotKalimat.size();t++){
            urutanModel.setValueAt(t+1,t,0);
        }
    }
    
    public static double log2(Double N){
        return Math.log(N) / Math.log(2);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TF_IDF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TF_IDF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TF_IDF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TF_IDF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TF_IDF().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Kalimat;
    private javax.swing.JTable Kata;
    private javax.swing.JTable Stat;
    private javax.swing.JTable Urutan;
    private javax.swing.JButton btnBersih;
    private javax.swing.JButton cmdbrowse;
    private javax.swing.JButton cmdsimpan;
    private javax.swing.JLabel csvKolom1;
    private javax.swing.JLabel csvKolom2;
    private javax.swing.JLabel csvKolom3;
    private javax.swing.JComboBox<String> fileType;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField kolomCsvJson;
    private javax.swing.JTextField kolomMysql;
    private javax.swing.JTextField tabelMysql;
    private javax.swing.JTextField txtpath;
    private javax.swing.JTextArea txttampilkalimat;
    // End of variables declaration//GEN-END:variables
}
